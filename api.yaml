swagger: "2.0"
info:
  description: "REST API description of the ElasTest TORM Module."
  version: "1.0.0"
  title: "ElasTest Torm REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v2"
tags:
- name: "testmanagement"
  description: "Test Management"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "testorchestration"
  description: "Test Orchestation"
schemes:
- "http"
paths:
  /tjob:
    post:
      tags:
      - "tjob"
      summary: "Create a new tjob."
      description: "Creates a new tjob with the received information."
      operationId: "createTJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Tjob object that needs to create"
        required: true
        schema:
          $ref: "#/definitions/TJob"
      responses:
        200: 
          description: "TJob Creation OK"
          schema:
            $ref: "#/definitions/TJob"
        405:
          description: "Invalid input"
    put:
      tags:
      - "tjob"
      summary: "Modifies a existing tjob."
      description: "Modifies a existing tjob received as a parameter."
      operationId: "modifyTJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Tjob object that needs to modify."
        required: true
        schema:
          $ref: "#/definitions/TJob"
      responses:
        200: 
          description: "TJob Mofification OK"
          schema:
            $ref: "#/definitions/TJob"
        405:
          description: "Invalid input"
    get:
      tags:
      - "tjob"
      summary: "Returns all tjobs."
      description: "Returns all tjobs for a user loged."
      operationId: "getAllTJobs"
      consumes:
      - "application/json"
      responses:
        200: 
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TJob"
        404:
          description: "Resource not found"
  /tjob/{tJobId}:
    get:
      tags:
      - "tjob"
      summary: "Returns a tjob."
      description: "Returns the tjob for a fiven tjobId. Returns its detail information."
      operationId: "getTJobById"
      produces:
      - "application/json"
      parameters:
      - name: "tJobId"
        in: "path"
        description: "ID of tJob to retrieve."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/TJob"
        400:
          description: "TJob not found."
    delete:
      tags:
      - "tjob"
      summary: "Deletes a tjob" 
      description: "Delete the job that matches with a given a tJobId." 
      responses:
        200:
          description: "Deleteted successful"
        404:
          description: "TJob not found"
  /tjob/{tJobId}/exec:
    get:
      tags:
      - "tjob execution"
      summary: "Returns all TJob Executions of a Tjob." 
      description: ""
      operationId: "getTJobsExecutions"
      produces:
      - "application/json"
      parameters:
      - name: "tJobId"
        in: "path"
        description: "TJob Id."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TJobExecution"
        404:
          description: "TJobs Executions not found"
    post:
      tags:
      - "tjob execution"
      summary: "Executes a TJob."
      description: "Runs the TJob for a give tJobId and returns a Tjob Execution Id."
      operationId: "execTJob"
      produces:
      - "application/json"
      parameters:
      - name: "tJobId"
        in: "path"
        description: "TJob Id."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TJob"
        400:
          description: "Invalid ID supplied"
        404:
          description: "TJob not found"
  /tjob/{tJobId}/exec/{tJobExecId}:
    get:
      tags:
      - "tjob execution"
      summary: "Returns a TJob Execution." 
      description: "Returns the TJob Execution for a fiven id."
      operationId: "getTJobsExecution"
      produces:
      - "application/json"
      parameters:
      - name: "tJobId"
        in: "path"
        description: "TJob Id."
        required: true
        type: "integer"
        format: "int64"
      - name: "tJobExecId"
        in: "path"
        description: "TJob Execution Id."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "TJob not found"
    delete:
      tags:
      - "tjob execution"
      summary: "Deletes a TJob Execution."
      description: "Deletes the TJob Execution for a given id. Returns the id."
      responses:
        200:
          description: OK
          schema:
            type: "integer"
            format: "int64"
  /tojob:
    get:
      tags:
      - "tojob"
      summary: "Finds and returns all TOJobs."
      description: ""
      operationId: "getTOJobs"
      produces:
      - "application/json"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TOJob"
    post:
      tags:
      - "tojob"
      summary: "Create new TOJob."
      description: ""
      operationId: "createTOJob"
      parameters:
      - in: "body"
        name: "body"
        description: "TOJjob to create."
        required: true
        schema:
          $ref: "#/definitions/TOJob"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TOJob"
  /tojob/{tOJobId}:
    get:
      tags:
      - "tojob"
      summary: "Returns a TOJob."
      description: "Returns the TOJob that maches with the id passed as a parameter."
      operationId: "getTOJobById"
      parameters:
      - name: "tOJobId"
        in: "path"
        description: "ID of TOJob to return."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TOJob"
    put:
      tags:
      - "tojob"
      summary: "Updates the configuration of a TOJob."
      description: "Updates the configuration of a TOJob."
      operationId: "modifyTOJob"
      parameters:
      - name: "tOJobId"
        in: "path"
        description: "Id of TJob that needs to be update."
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "TOJob object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/TOJob"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TOJob"
    delete:
      tags:
      - "tojob"
      summary: "Deletes a TOJob."
      description: "Deletes the TOJob that maches with the TOJobId passed as input parameter"
      operationId: "deleteTOJob"
      parameters:
      - name: "tOJobId"
        in: "path"
        description: "ID of TOJob to return."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: OK
          schema:
            type: "integer"
            format: "int64"
  /tojob/{tOJobId}/exec:
    get:
      tags:
      - "tojob execution"
      summary: "Returns all executions."
      description: "Returns all executions of a TOJob passed as parameter." 
      operationId: "getAllTOJobExecution"
      parameters:
      - name: "tOJobId"
        in: "path"
        description: "ID of TOJob to return."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TOJobExcution"
  /tojob/{tOJobId}/exec/{tOJobExecId}:
    get:
      tags:
      - "tojob execution"
      summary: "Returns the TOJobExecution detail. "
      description: ""
      operationId: "getTJobExecDetailById"
      parameters:
      - name: "tOJobId"
        in: "path"
        description: "ID of TOJob to return."
        required: true
        type: "integer"
        format: "int64"
      - name: "tOJobExecId"
        in: "path"
        description: "ID of TOJob Execution to return."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TOJobExecutionDetail"
    delete:
      tags:
      - "tojob"
      summary: "Deletes a TOJobs Execution."
      description: ""
      parameters:
      - name: "tOJobId"
        in: "path"
        description: "ID of TOJob to return."
        required: true
        type: "integer"
        format: "int64"
      - name: "tOJobExecId"
        in: "path"
        description: "ID of TOJob Execution to return."
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: OK
  /sut:
    post:
      tags:
      - "sut"
      summary: "Create SuT Description"
      description: ""
      operationId: "createSuT"
      consumes:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "SuT configuration"
        required: true
        schema:
          $ref: '#/definitions/SutSpecification'
      responses:
        200:
          description: "OK"
    put:
      tags:
      - "sut"
      summary: "Updates an existing SuT Description"
      description: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "OK"
  /sut/{sutId}:
    delete:
      tags:
      - "sut"
      summary: "Deletes a SuT"
      description: ""
      operationId: "deleteSuT"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "sutId"
        in: "path"
        description: "SuT id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "SuT not found"    
  /sut/{sutId}/deploy:
    post:
      tags:
      - "sut"
      summary: "Deploys a SuT"
      description: ""
      operationId: "deploySuT"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "sutId"
        in: "path"
        description: "SuT id to deploy"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "SuT not found"    
  /sut/{sutId}/undeploy:
    post:
      tags:
      - "sut"
      summary: "Undeploys a SuT"
      description: ""
      operationId: "undeploySuT"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "sutId"
        in: "path"
        description: "SuT id to undeploy"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "SuT not found"              
  /sut/{sutId}/status:
    get:
      tags:
      - "sut"
      summary: "Returns a SuT status"
      description: ""
      operationId: "SuTStatus"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "sutId"
        in: "path"
        description: "SuT id to return status"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "SuT not found"              
  /sut/{sutId}/logs:
    get:
      tags:
      - "sut"
      summary: "Returns a SuT logs"
      description: ""
      operationId: "SuTLogs"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "sutId"
        in: "path"
        description: "SuT id to return logs"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "SuT not found"              
  /sut/{sutId}/monitoring:
    get:
      tags:
      - "sut"
      summary: "Returns a SuT monitoring info"
      description: ""
      operationId: "SuTMonitoring"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "sutId"
        in: "path"
        description: "SuT id to return monitoring information"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "SuT not found"
definitions:
  TJobIn:
    type: "object"
    required:
    - "name"
    - "testServices"
    properties:
      name:
        type: "string"
        example: "testApp1"
      testServices:
        $ref: "#/definitions/TestServices"
      imageName:
        type: "string"
        example: "testapp1"
      sut:
        type: "integer"
        example: "12345678"
    xml:
      name: "TJobIn"
  TJob:
    type: "object"
    required:
    - "name"
    - "testServices"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "12345678"
      name:
        type: "string"
        example: "testApp1"
      testServices:
        $ref: "#/definitions/TestServices"
      imageName:
        type: "string"
        example: "testapp1"
      sut:
        type: "integer"
        example: "12345678"
  TestServices:
    type: "array"
    items:
      $ref: "#/definitions/TestService"
  TestService:
    type: "object"
    properties:
      serviceType: 
        type: "string"
        example: "userEmulator"
      name:
        type: "string"
        example:  "chrome"
      version:
        type: "integer"
        format: "int64"
  TJobExecution:
    type: "object"
  TOJob:
    type: "object"
  TOJobExcution:
    type: "object"
  TOJobExecutionDetail:
    type: "object"
  
  SutSpecification:
    type: "object"
    required:
    - "name"
    - "specification"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "sut definition 1"
      specification:
        type: "string"
        example: ""
      desc:
        type: "string"
        example: "This is a SuT description example"
      deployedSut:
        type: "array"
        items: 
          $ref: '#/definitions/DeployedSut'
    xml:
      name: "sut"
  DeployedSut:
    type: "object"
    required:
    - "url"
    properties:
      url:
        type: "string"
    xml:
      name: "deployedSut"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"